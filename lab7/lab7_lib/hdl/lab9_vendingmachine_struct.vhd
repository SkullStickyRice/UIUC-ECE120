-- VHDL Entity lab7_lib.lab9_vendingmachine.symbol
--
-- Created:
--          by - xli146.ews (eceb-2022-38.ews.illinois.edu)
--          at - 20:49:12 03/19/15
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY lab9_vendingmachine IS
   PORT( 
      T   : IN     std_logic;
      clk : IN     std_logic;
      rst : IN     std_logic;
      set : IN     std_logic;
      A   : OUT    std_logic;
      P   : OUT    std_logic
   );

-- Declarations

END lab9_vendingmachine ;

--
-- VHDL Architecture lab7_lib.lab9_vendingmachine.struct
--
-- Created:
--          by - xli146.ews (eceb-2022-38.ews.illinois.edu)
--          at - 20:49:12 03/19/15
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY lab7_lib;

ARCHITECTURE struct OF lab9_vendingmachine IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL S0_next : std_logic;
   SIGNAL S1_next : std_logic;
   SIGNAL S2_next : std_logic;
   SIGNAL dout    : std_logic;
   SIGNAL q       : std_logic;
   SIGNAL q1      : std_logic;
   SIGNAL q2      : std_logic;


   -- ModuleWare signal declarations(v1.9) for instance 'S0' of 'adff'
   SIGNAL mw_S0reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'S1' of 'adff'
   SIGNAL mw_S1reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'S2' of 'adff'
   SIGNAL mw_S2reg_cval : std_logic;

   -- Component Declarations
   COMPONENT lab9_state
   PORT (
      S0      : IN     std_logic ;
      S1      : IN     std_logic ;
      S2      : IN     std_logic ;
      T       : IN     std_logic ;
      S0_next : OUT    std_logic ;
      S1_next : OUT    std_logic ;
      S2_next : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT vending_machine
   PORT (
      S0 : IN     std_logic ;
      S1 : IN     std_logic ;
      S2 : IN     std_logic ;
      A  : OUT    std_logic ;
      P  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : lab9_state USE ENTITY lab7_lib.lab9_state;
   FOR ALL : vending_machine USE ENTITY lab7_lib.vending_machine;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'S0' of 'adff'
   q2 <= mw_S0reg_cval;
   s0seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_S0reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_S0reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_S0reg_cval <= S0_next;
         END IF;
      END IF;
   END PROCESS s0seq_proc;

   -- ModuleWare code(v1.9) for instance 'S1' of 'adff'
   q1 <= mw_S1reg_cval;
   s1seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_S1reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_S1reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_S1reg_cval <= S1_next;
         END IF;
      END IF;
   END PROCESS s1seq_proc;

   -- ModuleWare code(v1.9) for instance 'S2' of 'adff'
   q <= mw_S2reg_cval;
   s2seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_S2reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_S2reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_S2reg_cval <= S2_next;
         END IF;
      END IF;
   END PROCESS s2seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_2' of 'vdd'
   dout <= '1';

   -- Instance port mappings.
   U_0 : lab9_state
      PORT MAP (
         S0      => q2,
         S1      => q1,
         S2      => q,
         T       => T,
         S0_next => S0_next,
         S1_next => S1_next,
         S2_next => S2_next
      );
   U_1 : vending_machine
      PORT MAP (
         S0 => q2,
         S1 => q1,
         S2 => q,
         A  => A,
         P  => P
      );

END struct;
